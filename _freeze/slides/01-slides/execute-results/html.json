{
  "hash": "3818dd4f51e0956885e680caa6c487bf",
  "result": {
    "markdown": "---\ntitle: \"How to ask a Why Question\"\nsubtitle: \"And why to ask a why question\"\nformat:\n  revealjs: \n    slide-number: true\n    smaller: false\n    scrollable: true\n    incremental: true\n    chalkboard: \n      buttons: false\n    preview-links: auto\n    theme: moon\n    css: styles.css\n    embed-resources: false\n    code-fold: false\n    code-overflow: scroll\n    code-line-numbers: true\n    auto-stretch: true\n---\n\n\n\n\n## Why questions\n\nWhy why? \n\n## Test\n\n::: {.r-fit-text}\n$$ E[E[Y|A]] = E[E[A|Y]|Y] $$\n:::\n\n\n## Dags\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](01-slides_files/figure-revealjs/unnamed-chunk-1-1.png){width=960}\n:::\n:::\n\n\n\n## Code \n```{.r}\nlibrary(ggdag)\nlibrary(dplyr)\n\n\ncoords <- read.table(header = TRUE, text = \"\n  x y name\n  0 1 U\n  1 0 L0\n  2 0 A0\n  3 0 Y0\n  4 0 A1\n  5 0 Y2\n\")\n\nd <- dagify(\n  A1 ~ L0 + A0,\n  L0 ~ U,\n  Y0 ~ U,\n  Y2 ~ A1,\n  Y2 ~ U + Y0,\n  coords = coords)\n\nggdag(d) +\n   theme_dag()\n```\n\n\n##  DAG \n\n::: {.cell}\n::: {.cell-output-display}\n![](01-slides_files/figure-revealjs/unnamed-chunk-2-1.png){width=960}\n:::\n:::\n\n\n## Check confounding\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](01-slides_files/figure-revealjs/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n\n## Visualise confounding\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](01-slides_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n\n\n\n## test dag\n\n```{.r}\ninstall.packages(c(\"coda\",\"mvtnorm\",\"devtools\",\"loo\",\"dagitty\",\"shape\"))\ndevtools::install_github(\"rmcelreath/rethinking\")\nlibrary(rethinking)\ndrawdag(d, arrow = \"gray\",  Z=list(\"U\"))\n```\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}